!function(){"use strict";var e,t,a,o={667:function(e,t){t.q=void 0,t.q="3.2.2"},778:function(e,t,a){var x=this&&this.__values||function(e){var t="function"==typeof Symbol&&Symbol.iterator,a=t&&e[t],o=0;if(a)return a.call(e);if(e&&"number"==typeof e.length)return{next:function(){return{value:(e=e&&o>=e.length?void 0:e)&&e[o++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},o=this&&this.__read||function(e,t){var a="function"==typeof Symbol&&e[Symbol.iterator];if(!a)return e;var o,r,n=a.call(e),i=[];try{for(;(void 0===t||0<t--)&&!(o=n.next()).done;)i.push(o.value)}catch(e){r={error:e}}finally{try{o&&!o.done&&(a=n.return)&&a.call(n)}finally{if(r)throw r.error}}return i},r=this&&this.__spreadArray||function(e,t,a){if(a||2===arguments.length)for(var o,r=0,n=t.length;r<n;r++)!o&&r in t||((o=o||Array.prototype.slice.call(t,0,r))[r]=t[r]);return e.concat(o||Array.prototype.slice.call(t))},n=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},h=(Object.defineProperty(t,"__esModule",{value:!0}),t.RequireConfiguration=t.options=t.RequireMethods=t.RequireLoad=void 0,a(251)),i=a(871),p=n(a(402)),n=a(955),s=a(629),f=a(282),M=a(149),a=a(74),d=n.MathJax.config;function u(e,t){var a=e.options.require,o=a.allow,r=("["===t.substr(0,1)?"":a.prefix)+t;if(!(o.hasOwnProperty(r)?o[r]:o.hasOwnProperty(t)?o[t]:a.defaultAllow))throw new p.default("BadRequire",'Extension "%1" is not allowed to be loaded',r);s.Package.packages.has(r)?function e(t,a){var o=t.parseOptions.options.require,r=t.parseOptions.packageData.get("require").required,o=a.substr(o.prefix.length);if(r.indexOf(o)<0){r.push(o);var n=t;void 0===(r=f.CONFIG.dependencies[a])&&(r=[]);var i,p,s=n.parseOptions.options.require.prefix;try{for(var u=x(r),l=u.next();!l.done;l=u.next()){var c=l.value;c.substr(0,s.length)===s&&e(n,c)}}catch(n){i={error:n}}finally{try{l&&!l.done&&(p=u.return)&&p.call(u)}finally{if(i)throw i.error}}(r=h.ConfigurationHandler.get(o))&&(p=d[a]||{},r.options&&1===Object.keys(r.options).length&&r.options[o]&&((i={})[o]=p,p=i),t.configuration.add(o,t,p),a=t.parseOptions.packageData.get("require").configured,r.preprocessors.length&&!a.has(o)&&(a.set(o,!0),M.mathjax.retryAfter(Promise.resolve())))}}(e.configuration.packageData.get("require").jax,r):M.mathjax.retryAfter(f.Loader.load(r))}t.RequireLoad=u,t.RequireMethods={Require:function(e,t){var a=e.GetArgument(t);if(a.match(/[^_a-zA-Z0-9]/)||""===a)throw new p.default("BadPackageName","Argument for %1 is not a valid package name",t);u(e,a)}},t.options={require:{allow:(0,a.expandable)({base:!1,"all-packages":!1,autoload:!1,configmacros:!1,tagformat:!1,setoptions:!1}),defaultAllow:!0,prefix:"tex"}},new i.CommandMap("require",{require:"Require"},t.RequireMethods),t.RequireConfiguration=h.Configuration.create("require",{handler:{macro:["require"]},config:function(e,t){t.parseOptions.packageData.set("require",{jax:t,required:r([],o(t.options.packages),!1),configured:new Map});var t=t.parseOptions.options.require,a=t.prefix;if(a.match(/[^_a-zA-Z0-9]/))throw Error("Illegal characters used in \\require prefix");f.CONFIG.paths[a]||(f.CONFIG.paths[a]="[mathjax]/input/tex/extensions"),t.prefix="["+a+"]/"},options:t.options})},955:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isObject=MathJax._.components.global.isObject,t.combineConfig=MathJax._.components.global.combineConfig,t.combineDefaults=MathJax._.components.global.combineDefaults,t.combineWithMathJax=MathJax._.components.global.combineWithMathJax,t.MathJax=MathJax._.components.global.MathJax},149:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.mathjax=MathJax._.mathjax.mathjax},74:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.isObject=MathJax._.util.Options.isObject,t.APPEND=MathJax._.util.Options.APPEND,t.REMOVE=MathJax._.util.Options.REMOVE,t.OPTIONS=MathJax._.util.Options.OPTIONS,t.Expandable=MathJax._.util.Options.Expandable,t.expandable=MathJax._.util.Options.expandable,t.makeArray=MathJax._.util.Options.makeArray,t.keys=MathJax._.util.Options.keys,t.copy=MathJax._.util.Options.copy,t.insert=MathJax._.util.Options.insert,t.defaultOptions=MathJax._.util.Options.defaultOptions,t.userOptions=MathJax._.util.Options.userOptions,t.selectOptions=MathJax._.util.Options.selectOptions,t.selectOptionsFromKeys=MathJax._.util.Options.selectOptionsFromKeys,t.separateOptions=MathJax._.util.Options.separateOptions,t.lookup=MathJax._.util.Options.lookup},251:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.Configuration=MathJax._.input.tex.Configuration.Configuration,t.ConfigurationHandler=MathJax._.input.tex.Configuration.ConfigurationHandler,t.ParserConfiguration=MathJax._.input.tex.Configuration.ParserConfiguration},871:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.parseResult=MathJax._.input.tex.SymbolMap.parseResult,t.AbstractSymbolMap=MathJax._.input.tex.SymbolMap.AbstractSymbolMap,t.RegExpMap=MathJax._.input.tex.SymbolMap.RegExpMap,t.AbstractParseMap=MathJax._.input.tex.SymbolMap.AbstractParseMap,t.CharacterMap=MathJax._.input.tex.SymbolMap.CharacterMap,t.DelimiterMap=MathJax._.input.tex.SymbolMap.DelimiterMap,t.MacroMap=MathJax._.input.tex.SymbolMap.MacroMap,t.CommandMap=MathJax._.input.tex.SymbolMap.CommandMap,t.EnvironmentMap=MathJax._.input.tex.SymbolMap.EnvironmentMap},402:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=MathJax._.input.tex.TexError.default},282:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.PathFilters=MathJax._.components.loader.PathFilters,t.Loader=MathJax._.components.loader.Loader,t.MathJax=MathJax._.components.loader.MathJax,t.CONFIG=MathJax._.components.loader.CONFIG},629:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.PackageError=MathJax._.components.package.PackageError,t.Package=MathJax._.components.package.Package}},r={};function n(e){var t=r[e];if(void 0!==t)return t.exports;t=r[e]={exports:{}};return o[e].call(t.exports,t,t.exports,n),t.exports}e=n(955),t=n(667),a=n(778),MathJax.loader&&MathJax.loader.checkVersion("[tex]/require",t.q,"tex-extension"),(0,e.combineWithMathJax)({_:{input:{tex:{require:{RequireConfiguration:a}}}}})}();